function [trainedClassifier, validationAccuracy] = trainClassifier(trainingData)
% trainClassifier(trainingData)
%  returns a trained classifier and its accuracy.
%  This code recreates the classification model trained in
%  Classification Learner app.
%
%   Input:
%       trainingData: the training data of same data type as imported
%        in the app (table or matrix).
%
%   Output:
%       trainedClassifier: a struct containing the trained classifier.
%        The struct contains various fields with information about the
%        trained classifier.
%
%       trainedClassifier.predictFcn: a function to make predictions
%        on new data. It takes an input of the same form as this training
%        code (table or matrix) and returns predictions for the response.
%        If you supply a matrix, include only the predictors columns (or
%        rows).
%
%       validationAccuracy: a double containing the accuracy in
%        percent. In the app, the History list displays this
%        overall accuracy score for each model.
%
%  Use the code to train the model with new data.
%  To retrain your classifier, call the function from the command line
%  with your original data or new data as the input argument trainingData.
%
%  For example, to retrain a classifier trained with the original data set
%  T, enter:
%    [trainedClassifier, validationAccuracy] = trainClassifier(T)
%
%  To make predictions with the returned 'trainedClassifier' on new data T,
%  use
%    yfit = trainedClassifier.predictFcn(T)
%
%  To automate training the same classifier with new data, or to learn how
%  to programmatically train classifiers, examine the generated code.

% Auto-generated by MATLAB on 23-Apr-2017 14:35:08


% Extract predictors and response
% This code processes the data into the right shape for training the
% classifier.
inputTable = trainingData;
predictorNames = {'appleData1', 'appleData2', 'appleData3', 'appleData4', 'appleData5', 'appleData6', 'appleData7', 'appleData8', 'appleData9', 'appleData10', 'appleData11', 'appleData12', 'appleData13', 'appleData14', 'appleData15', 'appleData16', 'appleData17', 'appleData18', 'appleData19', 'appleData20', 'appleData21', 'appleData22', 'appleData23', 'appleData24', 'appleData25', 'appleData26', 'appleData27', 'appleData28', 'appleData29', 'appleData30', 'appleData31', 'appleData32', 'appleData33', 'appleData34', 'appleData35', 'appleData36', 'appleData37', 'appleData38', 'appleData39', 'appleData40', 'appleData41', 'appleData42', 'appleData43', 'appleData44', 'appleData45', 'appleData46', 'appleData47', 'appleData48', 'appleData49', 'appleData50', 'appleData51', 'appleData52', 'appleData53', 'appleData54', 'appleData55', 'appleData56', 'appleData57', 'appleData58', 'appleData59', 'appleData60', 'appleData61', 'appleData62', 'appleData63', 'appleData64', 'appleData65', 'appleData66', 'appleData67', 'appleData68', 'appleData69', 'appleData70', 'appleData71', 'appleData72', 'appleData73', 'appleData74', 'appleData75', 'appleData76', 'appleData77', 'appleData78', 'appleData79', 'appleData80', 'appleData81', 'appleData82', 'appleData83', 'appleData84', 'appleData85', 'appleData86', 'appleData87', 'appleData88', 'appleData89', 'appleData90', 'appleData91', 'appleData92', 'appleData93', 'appleData94', 'appleData95', 'appleData96', 'appleData97', 'appleData98', 'appleData99', 'appleData100', 'appleData101', 'appleData102', 'appleData103', 'appleData104', 'appleData105', 'appleData106', 'appleData107', 'appleData108', 'appleData109', 'appleData110', 'appleData111', 'appleData112', 'appleData113', 'appleData114', 'appleData115', 'appleData116', 'appleData117', 'appleData118', 'appleData119', 'appleData120', 'appleData121', 'appleData122', 'appleData123', 'appleData124', 'appleData125', 'appleData126', 'appleData127', 'appleData128', 'appleData129', 'appleData130', 'appleData131', 'appleData132', 'appleData133', 'appleData134', 'appleData135', 'appleData136', 'appleData137', 'appleData138', 'appleData139', 'appleData140', 'appleData141', 'appleData142', 'appleData143', 'appleData144', 'appleData145', 'appleData146', 'appleData147', 'appleData148', 'appleData149', 'appleData150', 'appleData151', 'appleData152', 'appleData153', 'appleData154', 'appleData155', 'appleData156', 'appleData157', 'appleData158', 'appleData159', 'appleData160', 'appleData161', 'appleData162', 'appleData163', 'appleData164', 'appleData165', 'appleData166', 'appleData167', 'appleData168', 'appleData169', 'appleData170', 'appleData171', 'appleData172', 'appleData173', 'appleData174', 'appleData175', 'appleData176', 'appleData177', 'appleData178', 'appleData179', 'appleData180', 'appleData181', 'appleData182', 'appleData183', 'appleData184', 'appleData185', 'appleData186', 'appleData187', 'appleData188', 'appleData189', 'appleData190', 'appleData191', 'appleData192', 'appleData193', 'appleData194', 'appleData195', 'appleData196', 'appleData197', 'appleData198', 'appleData199', 'appleData200', 'appleData201', 'appleData202', 'appleData203', 'appleData204', 'appleData205', 'appleData206', 'appleData207', 'appleData208', 'appleData209', 'appleData210', 'appleData211', 'appleData212', 'appleData213', 'appleData214', 'appleData215', 'appleData216', 'appleData217', 'appleData218', 'appleData219', 'appleData220', 'appleData221', 'appleData222', 'appleData223', 'appleData224', 'appleData225', 'appleData226', 'appleData227', 'appleData228', 'appleData229', 'appleData230', 'appleData231', 'appleData232', 'appleData233', 'appleData234', 'appleData235', 'appleData236', 'appleData237', 'appleData238', 'appleData239', 'appleData240', 'appleData241', 'appleData242', 'appleData243', 'appleData244', 'appleData245', 'appleData246', 'appleData247', 'appleData248', 'appleData249', 'appleData250'};
predictors = inputTable(:, predictorNames);
response = inputTable.appleType;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% Train a classifier
% This code specifies all the classifier options and trains the classifier.
classificationKNN = fitcknn(...
    predictors, ...
    response, ...
    'Distance', 'Cosine', ...
    'Exponent', [], ...
    'NumNeighbors', 10, ...
    'DistanceWeight', 'Equal', ...
    'Standardize', true, ...
    'ClassNames', categorical({'LEDOff'; 'NoBat'; 'NoRWheel'; 'NoWheels'; 'NoWheelsLEDOff'; 'Positives'}));

% Create the result struct with predict function
predictorExtractionFcn = @(t) t(:, predictorNames);
knnPredictFcn = @(x) predict(classificationKNN, x);
trainedClassifier.predictFcn = @(x) knnPredictFcn(predictorExtractionFcn(x));

% Add additional fields to the result struct
trainedClassifier.RequiredVariables = {'appleData1', 'appleData2', 'appleData3', 'appleData4', 'appleData5', 'appleData6', 'appleData7', 'appleData8', 'appleData9', 'appleData10', 'appleData11', 'appleData12', 'appleData13', 'appleData14', 'appleData15', 'appleData16', 'appleData17', 'appleData18', 'appleData19', 'appleData20', 'appleData21', 'appleData22', 'appleData23', 'appleData24', 'appleData25', 'appleData26', 'appleData27', 'appleData28', 'appleData29', 'appleData30', 'appleData31', 'appleData32', 'appleData33', 'appleData34', 'appleData35', 'appleData36', 'appleData37', 'appleData38', 'appleData39', 'appleData40', 'appleData41', 'appleData42', 'appleData43', 'appleData44', 'appleData45', 'appleData46', 'appleData47', 'appleData48', 'appleData49', 'appleData50', 'appleData51', 'appleData52', 'appleData53', 'appleData54', 'appleData55', 'appleData56', 'appleData57', 'appleData58', 'appleData59', 'appleData60', 'appleData61', 'appleData62', 'appleData63', 'appleData64', 'appleData65', 'appleData66', 'appleData67', 'appleData68', 'appleData69', 'appleData70', 'appleData71', 'appleData72', 'appleData73', 'appleData74', 'appleData75', 'appleData76', 'appleData77', 'appleData78', 'appleData79', 'appleData80', 'appleData81', 'appleData82', 'appleData83', 'appleData84', 'appleData85', 'appleData86', 'appleData87', 'appleData88', 'appleData89', 'appleData90', 'appleData91', 'appleData92', 'appleData93', 'appleData94', 'appleData95', 'appleData96', 'appleData97', 'appleData98', 'appleData99', 'appleData100', 'appleData101', 'appleData102', 'appleData103', 'appleData104', 'appleData105', 'appleData106', 'appleData107', 'appleData108', 'appleData109', 'appleData110', 'appleData111', 'appleData112', 'appleData113', 'appleData114', 'appleData115', 'appleData116', 'appleData117', 'appleData118', 'appleData119', 'appleData120', 'appleData121', 'appleData122', 'appleData123', 'appleData124', 'appleData125', 'appleData126', 'appleData127', 'appleData128', 'appleData129', 'appleData130', 'appleData131', 'appleData132', 'appleData133', 'appleData134', 'appleData135', 'appleData136', 'appleData137', 'appleData138', 'appleData139', 'appleData140', 'appleData141', 'appleData142', 'appleData143', 'appleData144', 'appleData145', 'appleData146', 'appleData147', 'appleData148', 'appleData149', 'appleData150', 'appleData151', 'appleData152', 'appleData153', 'appleData154', 'appleData155', 'appleData156', 'appleData157', 'appleData158', 'appleData159', 'appleData160', 'appleData161', 'appleData162', 'appleData163', 'appleData164', 'appleData165', 'appleData166', 'appleData167', 'appleData168', 'appleData169', 'appleData170', 'appleData171', 'appleData172', 'appleData173', 'appleData174', 'appleData175', 'appleData176', 'appleData177', 'appleData178', 'appleData179', 'appleData180', 'appleData181', 'appleData182', 'appleData183', 'appleData184', 'appleData185', 'appleData186', 'appleData187', 'appleData188', 'appleData189', 'appleData190', 'appleData191', 'appleData192', 'appleData193', 'appleData194', 'appleData195', 'appleData196', 'appleData197', 'appleData198', 'appleData199', 'appleData200', 'appleData201', 'appleData202', 'appleData203', 'appleData204', 'appleData205', 'appleData206', 'appleData207', 'appleData208', 'appleData209', 'appleData210', 'appleData211', 'appleData212', 'appleData213', 'appleData214', 'appleData215', 'appleData216', 'appleData217', 'appleData218', 'appleData219', 'appleData220', 'appleData221', 'appleData222', 'appleData223', 'appleData224', 'appleData225', 'appleData226', 'appleData227', 'appleData228', 'appleData229', 'appleData230', 'appleData231', 'appleData232', 'appleData233', 'appleData234', 'appleData235', 'appleData236', 'appleData237', 'appleData238', 'appleData239', 'appleData240', 'appleData241', 'appleData242', 'appleData243', 'appleData244', 'appleData245', 'appleData246', 'appleData247', 'appleData248', 'appleData249', 'appleData250'};
trainedClassifier.ClassificationKNN = classificationKNN;
trainedClassifier.About = 'This struct is a trained classifier exported from Classification Learner R2016b.';
trainedClassifier.HowToPredict = sprintf('To make predictions on a new table, T, use: \n  yfit = c.predictFcn(T) \nreplacing ''c'' with the name of the variable that is this struct, e.g. ''trainedClassifier''. \n \nThe table, T, must contain the variables returned by: \n  c.RequiredVariables \nVariable formats (e.g. matrix/vector, datatype) must match the original training data. \nAdditional variables are ignored. \n \nFor more information, see <a href="matlab:helpview(fullfile(docroot, ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')">How to predict using an exported model</a>.');

% Extract predictors and response
% This code processes the data into the right shape for training the
% classifier.
inputTable = trainingData;
predictorNames = {'appleData1', 'appleData2', 'appleData3', 'appleData4', 'appleData5', 'appleData6', 'appleData7', 'appleData8', 'appleData9', 'appleData10', 'appleData11', 'appleData12', 'appleData13', 'appleData14', 'appleData15', 'appleData16', 'appleData17', 'appleData18', 'appleData19', 'appleData20', 'appleData21', 'appleData22', 'appleData23', 'appleData24', 'appleData25', 'appleData26', 'appleData27', 'appleData28', 'appleData29', 'appleData30', 'appleData31', 'appleData32', 'appleData33', 'appleData34', 'appleData35', 'appleData36', 'appleData37', 'appleData38', 'appleData39', 'appleData40', 'appleData41', 'appleData42', 'appleData43', 'appleData44', 'appleData45', 'appleData46', 'appleData47', 'appleData48', 'appleData49', 'appleData50', 'appleData51', 'appleData52', 'appleData53', 'appleData54', 'appleData55', 'appleData56', 'appleData57', 'appleData58', 'appleData59', 'appleData60', 'appleData61', 'appleData62', 'appleData63', 'appleData64', 'appleData65', 'appleData66', 'appleData67', 'appleData68', 'appleData69', 'appleData70', 'appleData71', 'appleData72', 'appleData73', 'appleData74', 'appleData75', 'appleData76', 'appleData77', 'appleData78', 'appleData79', 'appleData80', 'appleData81', 'appleData82', 'appleData83', 'appleData84', 'appleData85', 'appleData86', 'appleData87', 'appleData88', 'appleData89', 'appleData90', 'appleData91', 'appleData92', 'appleData93', 'appleData94', 'appleData95', 'appleData96', 'appleData97', 'appleData98', 'appleData99', 'appleData100', 'appleData101', 'appleData102', 'appleData103', 'appleData104', 'appleData105', 'appleData106', 'appleData107', 'appleData108', 'appleData109', 'appleData110', 'appleData111', 'appleData112', 'appleData113', 'appleData114', 'appleData115', 'appleData116', 'appleData117', 'appleData118', 'appleData119', 'appleData120', 'appleData121', 'appleData122', 'appleData123', 'appleData124', 'appleData125', 'appleData126', 'appleData127', 'appleData128', 'appleData129', 'appleData130', 'appleData131', 'appleData132', 'appleData133', 'appleData134', 'appleData135', 'appleData136', 'appleData137', 'appleData138', 'appleData139', 'appleData140', 'appleData141', 'appleData142', 'appleData143', 'appleData144', 'appleData145', 'appleData146', 'appleData147', 'appleData148', 'appleData149', 'appleData150', 'appleData151', 'appleData152', 'appleData153', 'appleData154', 'appleData155', 'appleData156', 'appleData157', 'appleData158', 'appleData159', 'appleData160', 'appleData161', 'appleData162', 'appleData163', 'appleData164', 'appleData165', 'appleData166', 'appleData167', 'appleData168', 'appleData169', 'appleData170', 'appleData171', 'appleData172', 'appleData173', 'appleData174', 'appleData175', 'appleData176', 'appleData177', 'appleData178', 'appleData179', 'appleData180', 'appleData181', 'appleData182', 'appleData183', 'appleData184', 'appleData185', 'appleData186', 'appleData187', 'appleData188', 'appleData189', 'appleData190', 'appleData191', 'appleData192', 'appleData193', 'appleData194', 'appleData195', 'appleData196', 'appleData197', 'appleData198', 'appleData199', 'appleData200', 'appleData201', 'appleData202', 'appleData203', 'appleData204', 'appleData205', 'appleData206', 'appleData207', 'appleData208', 'appleData209', 'appleData210', 'appleData211', 'appleData212', 'appleData213', 'appleData214', 'appleData215', 'appleData216', 'appleData217', 'appleData218', 'appleData219', 'appleData220', 'appleData221', 'appleData222', 'appleData223', 'appleData224', 'appleData225', 'appleData226', 'appleData227', 'appleData228', 'appleData229', 'appleData230', 'appleData231', 'appleData232', 'appleData233', 'appleData234', 'appleData235', 'appleData236', 'appleData237', 'appleData238', 'appleData239', 'appleData240', 'appleData241', 'appleData242', 'appleData243', 'appleData244', 'appleData245', 'appleData246', 'appleData247', 'appleData248', 'appleData249', 'appleData250'};
predictors = inputTable(:, predictorNames);
response = inputTable.appleType;
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];

% Perform cross-validation
partitionedModel = crossval(trainedClassifier.ClassificationKNN, 'KFold', 5);

% Compute validation accuracy
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');

% Compute validation predictions and scores
[validationPredictions, validationScores] = kfoldPredict(partitionedModel);
